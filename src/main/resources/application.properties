# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url = jdbc:mysql://remotemysql.com/${DATABASE_NAME}?useSSL=true
spring.datasource.username = ${DB_USER_NAME}
spring.datasource.password = ${DB_PASSWORD}

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.tomcat.test-while-idle = true
spring.datasource.tomcat.validation-query = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query = select email, password, active from users where email=?
spring.queries.roles-query = select u.email, r.role from users u inner join user_roles ur on(u.user_id=ur.user_id) inner join roles r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode = always


# Whether to enable the default error page displayed in browsers in case of a server error.
server.error.whitelabel.enabled=false


#For Heroku
server.port=${PORT:8080}